---
- name: Alpine dynamic MOTD generator
  hosts: all
  vars:
    placeholder: "daily"
    file: "motd-script"
    md5sum: "c0a59404b013ff89521279a95d097a8b"

  tasks:
    - name: Check for presence of crond service
      command: rc-service crond status
      register: crond_status
      failed_when: crond_status.failed
      ignore_errors: yes

    - name: Fail if crond service is not present
      fail:
        msg: "crond service is not present"
      when: crond_status.failed

    - name: Check if crond service is running
      command: rc-service crond status
      register: crond_running
      failed_when: "'started' not in crond_running.stdout"
      ignore_errors: yes

    - name: Start crond service if not running
      command: rc-service crond start
      when: "'started' not in crond_running.stdout"
      register: crond_start
      failed_when: crond_start.failed

    - name: Check original Alpine motd file against md5sum
      shell: "echo '{{md5sum}}  /etc/motd' | md5sum --check --strict"
      register: motd_md5sum
      failed_when: motd_md5sum.failed
      ignore_errors: yes

    - name: Output md5sum of the original Alpine motd file
      debug:
        msg: "{{motd_md5sum}}"
      when: motd_md5sum.failed

    - name: Backup original Alpine motd file if md5sum does match
      become: yes
      become_method: sudo
      copy:
        src: /etc/motd
        dest: /etc/motd.bak
        force: true
      when: not motd_md5sum.failed
      register: motd_backup
      failed_when: motd_backup.failed

    - name: Fail if motd backup fails
      fail:
        msg: "Backup of the original Alpine motd file failed"
      when: motd_backup.failed

    - name: Check for presence of motd script
      stat:
        path: /etc/periodic/{{ placeholder }}/{{ file }}
      register: motd_script

    - name: Create motd script if not present
      become: yes
      become_method: sudo
      copy:
        content: |
          #!/bin/sh
          echo "Dynamic MOTD"
        dest: /etc/periodic/{{ placeholder }}/{{ file }}
        owner: root
        group: root
        mode: '0755'
      when: not motd_script.stat.exists

    - name: Ensure correct file permissions
      file:
        path: /etc/periodic/{{ placeholder }}/{{ file }}
        owner: root
        group: root
        mode: '0755'

    - name: Check execution of the file
      become: yes
      become_method: sudo
      command: run-parts --test /etc/periodic/{{ placeholder }}
      register: run_parts_test
      failed_when: run_parts_test.failed
      ignore_errors: yes

    - name: Fail if run-parts test fails
      fail:
        msg: "run-parts test failed"
      when: run_parts_test.failed
